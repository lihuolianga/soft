生成带有 SAN（Subject Alternative Name）的 HTTPS SSL 证书可以通过 OpenSSL 完成。以下是详细的步骤，包括创建 CA、生成服务器证书请求（CSR）、配置 SAN 并签发证书。

步骤 1：准备环境

确保你已经安装了 OpenSSL，并且有足够的权限来创建和管理证书文件。

步骤 2：创建根 CA

创建 CA 私钥



openssl genrsa -aes256 -out ca.key 4096

这将创建一个受密码保护的 4096 位私钥。如果你不希望私钥受密码保护，可以省略 -aes256 参数。

创建自签名 CA 证书



openssl req -x509 -new -nodes -key ca.key \

    -sha256 -days 3650 \

    -out ca.crt \

    -subj "/C=CN/ST=Beijing/L=Beijing/O=qidaren/OU=IT Department/CN=drlg.b.cc"




步骤 3：创建服务器私钥和 CSR

创建服务器私钥




openssl genrsa -out drlg.b.cc.key 2048


创建 CSR

在创建 CSR 时，你需要指定一个配置文件来包含 SAN 配置。创建一个名为 openssl.cnf 的配置文件，内容如下：


[ req ]

default_bits      = 2048

distinguished_name = req_distinguished_name

req_extensions    = req_ext

[ req_distinguished_name ]

C  = CN

ST = Beijing

L  = Beijing

O  = qidaren

OU = IT Department

CN = drlg.b.cc

[ req_ext ]

subjectAltName = @alt_names

[ alt_names ]

DNS.1 = drlg.b.cc

DNS.2 = *.drlg.b.cc  # 如果需要通配符支持


使用此配置文件生成 CSR：


openssl req -new -key drlg.b.cc.key -out drlg.b.cc.csr -config openssl.cnf


步骤 4：签发带 SAN 的服务器证书

使用 CA 私钥和证书来签发服务器证书，并确保包含 SAN：


openssl x509 -req -in drlg.b.cc.csr \

    -CA ca.crt -CAkey ca.key \

    -CAcreateserial \

    -out drlg.b.cc.crt \

    -days 365 \

    -extfile openssl.cnf \

    -extensions req_ext


步骤 5：验证新证书

确认新证书是否正确包含了 SAN：


openssl x509 -in drlg.b.cc.crt -text -noout | grep -A1 "Subject Alternative Name"


你应该看到类似如下的输出，表明 SAN 已经被正确添加：


X509v3 Subject Alternative Name:

    DNS:drlg.b.cc, DNS:*.drlg.b.cc


步骤 6：部署证书

将生成的 .crt 和 .key 文件部署到你的 Web 服务器中，并更新服务器配置以使用这些文件。

对于 Nginx

编辑你的 Nginx 配置文件，添加或修改以下指令：


server {

    listen 443 ssl;

    server_name drlg.b.cc;

    ssl_certificate /path/to/drlg.b.cc.crt;

    ssl_certificate_key /path/to/drlg.b.cc.key;

    ssl_trusted_certificate /path/to/ca.crt;  # 如果适用

    # 其他配置...

}


重启 Nginx 服务以使更改生效：


sudo systemctl restart nginx


对于 Apache

编辑你的 Apache 配置文件，添加或修改以下指令：


<VirtualHost *:443>

    ServerName drlg.b.cc

    SSLEngine on

    SSLCertificateFile /path/to/drlg.b.cc.crt

    SSLCertificateKeyFile /path/to/drlg.b.cc.key

    SSLCertificateChainFile /path/to/ca.crt  # 如果适用

    # 其他配置...

</VirtualHost>


重启 Apache 服务以使更改生效：


sudo systemctl restart apache2


通过以上步骤，你应该能够成功生成并部署一个带有 SAN 的 HTTPS SSL 证书，从而确保浏览器能够正确验证域名与证书的匹配性，并消除“此服务器无法证实它就是 drlg.b.cc”的警告。如果遇到任何问题，请仔细检查每一步骤，确保所有文件路径和配置都正确无误。



既然你刚刚生成了证书，并希望在 Windows 上安全访问使用该证书的 HTTPS 网站，你需要将这个证书或其签发的 CA 证书导入到 Windows 的受信任根证书颁发机构存储中。以下是详细的步骤：

步骤 1：准备证书文件

确保你有以下文件：

CA 证书 (ca.crt)：如果你有一个内部 CA。

服务器证书 (drlg.b.cc.crt)：如果你没有内部 CA，只有自签名的服务器证书。

步骤 2：将证书转换为 .pem 或 .cer 格式（如果需要）

Windows 更容易处理 .cer 或 .pfx 格式的证书。如果你的证书是 .crt 格式，可以使用 OpenSSL 将其转换为 .cer 格式：




openssl x509 -in ca.crt -out ca.cer -outform DER

openssl x509 -in drlg.b.cc.crt -out drlg.b.cc.cer -outform DER


步骤 3：导入证书到 Windows

方法 1：通过“管理计算机的证书”导入 CA 证书

打开“管理计算机的证书”：

按 Win + R 打开“运行”对话框，输入 mmc 并按回车键。

在控制台窗口中，选择“文件” > “添加/删除管理单元”。

点击“证书”，然后点击“添加”。

选择“计算机账户”，点击“下一步”，然后选择“本地计算机”，点击“完成”。

导入 CA 证书：

在左侧窗格中，展开“证书 (本地计算机)”。

右键点击“受信任的根证书颁发机构”下的“证书”，选择“所有任务” > “导入”。

按照证书导入向导的提示，浏览并选择你的 ca.cer 文件。

完成导入后，关闭 MMC 控制台。

方法 2：直接双击证书文件导入

双击证书文件：

双击你想要导入的 .cer 文件（例如 ca.cer 或 drlg.b.cc.cer）。

按照证书导入向导操作：

选择“将所有的证书放入下列存储”，然后点击“浏览”。

选择“受信任的根证书颁发机构”，然后点击“确定”和“下一步”。

完成导入。

步骤 4：验证证书是否已成功导入

打开“管理计算机的证书”（如上所述）。

检查“受信任的根证书颁发机构”：

展开“受信任的根证书颁发机构” > “证书”。

查找并确认你导入的证书是否出现在列表中。

步骤 5：重启浏览器或计算机

为了确保更改生效，请重启浏览器或整个计算机。

步骤 6：测试连接

尝试再次访问 https://drlg.b.cc，确保不再出现“此服务器无法证实它就是 drlg.b.cc”的警告。

注意事项

私钥保护：如果你有私钥文件（如 ca.key 或 drlg.b.cc.key），请确保它们的安全性，不要随意分发。

中间证书：如果你的证书链中有中间证书，请确保也将这些中间证书导入到“中间证书颁发机构”存储中。

组策略部署：对于企业环境中的多台计算机，可以通过组策略对象 (GPO) 自动分发和安装证书。

通过以上步骤，你应该能够在 Windows 上安全访问使用自制证书的 HTTPS 网站。如果问题仍然存在，请确保所有文件路径正确无误，并且文件权限设置适当。



@echo off

setlocal

REM 设置证书文件路径

set CERT_DIR=%~dp0

set CA_CERT=%CERT_DIR%\ca.crt

set SERVER_CERT=%CERT_DIR%\drlg.b.cc.crt

REM 检查证书文件是否存在

if not exist "%CA_CERT%" (

    echo CA certificate file %CA_CERT% does not exist.

    exit /b 1

)

if not exist "%SERVER_CERT%" (

    echo Server certificate file %SERVER_CERT% does not exist.

    exit /b 1

)

REM 导入 CA 证书到受信任的根证书颁发机构存储

echo Importing CA certificate to Trusted Root Certification Authorities store...

certutil -addstore -f "Root" "%CA_CERT%"

if %errorlevel% neq 0 (

    echo Failed to import CA certificate.

    exit /b 1

)

echo CA certificate imported successfully.

REM 导入服务器证书到受信任的根证书颁发机构存储（可选）

echo Importing server certificate to Trusted Root Certification Authorities store...

certutil -addstore -f "Root" "%SERVER_CERT%"

if %errorlevel% neq 0 (

    echo Failed to import server certificate.

    exit /b 1

)

echo Server certificate imported successfully.

REM 提示重启浏览器或计算机以使更改生效

echo Certificates have been installed. Please restart your browser or computer for changes to take effect.

endlocal

pause

